/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PockerImport } from './routes/pocker'
import { Route as GeneratePdfIndexImport } from './routes/generate-pdf/index'
import { Route as ExamplesIndexImport } from './routes/examples/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ServicesIndexLazyImport = createFileRoute('/services/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const PockerRoute = PockerImport.update({
  path: '/pocker',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ServicesIndexLazyRoute = ServicesIndexLazyImport.update({
  path: '/services/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/services/index.lazy').then((d) => d.Route),
)

const GeneratePdfIndexRoute = GeneratePdfIndexImport.update({
  path: '/generate-pdf/',
  getParentRoute: () => rootRoute,
} as any)

const ExamplesIndexRoute = ExamplesIndexImport.update({
  path: '/examples/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/pocker': {
      id: '/pocker'
      path: '/pocker'
      fullPath: '/pocker'
      preLoaderRoute: typeof PockerImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/examples/': {
      id: '/examples/'
      path: '/examples'
      fullPath: '/examples'
      preLoaderRoute: typeof ExamplesIndexImport
      parentRoute: typeof rootRoute
    }
    '/generate-pdf/': {
      id: '/generate-pdf/'
      path: '/generate-pdf'
      fullPath: '/generate-pdf'
      preLoaderRoute: typeof GeneratePdfIndexImport
      parentRoute: typeof rootRoute
    }
    '/services/': {
      id: '/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  PockerRoute,
  AboutLazyRoute,
  ExamplesIndexRoute,
  GeneratePdfIndexRoute,
  ServicesIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/pocker",
        "/about",
        "/examples/",
        "/generate-pdf/",
        "/services/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/pocker": {
      "filePath": "pocker.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/examples/": {
      "filePath": "examples/index.tsx"
    },
    "/generate-pdf/": {
      "filePath": "generate-pdf/index.tsx"
    },
    "/services/": {
      "filePath": "services/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
